name: Build and Deploy

on:
  push:
    branches:
      - main
    # 当推送到 main 分支时触发

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    # 运行在最新版本的 Ubuntu 上

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true # 确保检出子模块
          fetch-depth: 0    # 获取完整历史记录
        # 检出仓库代码并包含子模块

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "latest"
          extended: true
        # 设置 Hugo，安装最新版本的 Hugo 扩展版

      - name: Update submodules
        run: git submodule update --init --recursive
        # 初始化并更新子模块

      - name: Build
        run: hugo
        # 运行 Hugo 命令构建静态网站

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.ACTION_ACCESS_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
        # 部署到 gh-pages 分支
        # 使用由 GitHub 自动生成的 ACTION_ACCESS_TOKEN 进行身份验证
        # 将构建后的 ./public 目录中的文件发布到 gh-pages 分支
      
      #- name: Deploy to Server
      #  uses: appleboy/ssh-action@master
      #  with:
      #    host: ${{ secrets.SERVER_HOST }}
      #    username: ${{ secrets.SERVER_USERNAME }}
      #    key: ${{ secrets.SERVER_KEY }} 
      #    port: ${{ secrets.SERVER_PORT }}  # 使用 SERVER_PORT 变量来指定端口号
      #    script: |
      #      cd ${{ secrets.SERVER_PATH }}
      #      rm -rf *
      #      scp -r ./public ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}
        # 进入到服务器上指定的部署路径
        # 删除目标路径下的所有文件和子目录
        # 使用 scp 命令将本地 Hugo 构建生成的静态网站文件复制到当前目录下

      - name: Server Deploy
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: ./public
          remote_path: /www/wwwroot/xlg.life/ # 最好先在远程主机创建该目录
          remote_host: ${{ secrets.SERVER_HOST }} # 远程主机 IP
          remote_port: ${{ secrets.SERVER_PORT }} # ssh 端口，默认为 22
          remote_user: ${{ secrets.SERVER_USERNAME }} # ssh user
          remote_key: ${{ secrets.SERVER_KEY }} # ssh 私钥

      
        
